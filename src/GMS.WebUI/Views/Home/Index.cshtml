@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Index";
}
<div class="admin_wrapper">
    @Html.Partial("_home/_leftNavigationHome")
    <!-- Modal -->
    <input type="button" id="btnOpenAddServicesPopup" style="display:none" data-bs-toggle="modal" data-bs-target="#addServicesPopup" />
    <div id="div_AddPartial">
        @* @Html.Partial("_packageMasterList/_add") *@
    </div>
    <!-- Modal -->

    <div class="right_container">
        <!-- filtered rooms Start-->
        <div class="filtered_rooms_container">
            <div class="therapiesList_table_list">
                <div class="title_area">
                    <h2>Guest Status</h2>
                    <div class="btn_add">
                        @* <a href="#" class="addNew_btn" onclick="AddPartialView(0)">Add Packages</a> *@
                    </div>
                </div>
                <div id="div_ViewGuestsListPartial">
                    @* @Html.Partial("_index/_guestsList", Model) *@
                </div>
            </div>
        </div>
        <!-- filtered rooms end-->
    </div>
    @Html.Partial("_bottomNavigation1")
</div>






@section Scripts {
    <script src="~/customjs/Home/Index.js"></script>
    <script src="~/customjs/validation.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {
        GuestsListPartialView();
        });

        const scrollContainer = document.getElementById("scrollContainer");
        const scrollLeft = document.getElementById("scrollLeft");
        const scrollRight = document.getElementById("scrollRight");
        const scrollStep = 200; // Pixels to scroll on each click

        function updateButtons() {
            scrollLeft.classList.toggle("hidden", scrollContainer.scrollLeft <= 0);
            scrollRight.classList.toggle("hidden", scrollContainer.scrollLeft + scrollContainer.clientWidth >= scrollContainer.scrollWidth);
        }

        scrollLeft.addEventListener("click", () => {
            scrollContainer.scrollBy({ left: -scrollStep, behavior: "smooth" });
        });

        scrollRight.addEventListener("click", () => {
            scrollContainer.scrollBy({ left: scrollStep, behavior: "smooth" });
        });

        scrollContainer.addEventListener("scroll", updateButtons);
        window.addEventListener("resize", updateButtons);

        updateButtons(); // Ensure correct button visibility on load
    </script>
}
